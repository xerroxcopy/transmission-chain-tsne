experiments_df <- bind_rows(one_umap_df, two_umap_df, three_umap_df, four_umap_df, five_umap_df, six_umap_df, seven_umap_df, eight_umap_df)
experiments_df |>
ggplot(aes(x = x, y = y, colour = t)) +
geom_point(size = .3) +
geom_path() +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
facet_wrap(facets = vars(exp), nrow = 2) +
theme(
panel.grid = element_blank(),
axis.line = element_line())
experiments_df |>
ggplot(aes(x = x, y = y, colour = t)) +
geom_point(size = .3) +
# geom_path() +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
facet_wrap(facets = vars(exp), nrow = 2) +
theme(
panel.grid = element_blank(),
axis.line = element_line())
df_all <-
list.files("input/drawing/", full.names=T) |>
map(~ load.image(file = .x)) |>
map(~ resize(im = .x, size_x = 128, size_y = 128))
df_all <- df_all |>
map(~ grayscale(im = .x)) |>
map(~t(as.numeric(.))) |>
map_dfr(~ as.data.frame(.))
all_umap <- df_all |>
umap()
all_umap_df <- all_umap$layout |>
as_tibble() |>
transmute(x = V1, y = V2)
all_umap_df |>
ggplot(aes(x = x, y = y)) +
geom_point(size = .3)
all_umap_df
list.files("input/drawing/", full.names=T)
all_umap_df |>
mutate(filename = list.files("input/drawing/", full.names=T)) |>
mutate(experiment = str_extract(filename, "[0-9]"))
all_umap_df |>
mutate(filename = list.files("input/drawing/", full.names=T)) |>
mutate(experiment = str_extract(filename, "[0-9]"), filename = NULL)
all_umap_df |>
mutate(filename = list.files("input/drawing/", full.names=T)) |>
mutate(experiment = str_extract_all(filename, "[0-9]") |> unlist() |> as.numeric(), filename = NULL)
all_umap_df |>
mutate(filename = list.files("input/drawing/", full.names=T)) |>
mutate(experiment = str_extract_all(filename, "[0-9]") |> unlist(), filename = NULL)
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_extract_all(filename, "[0-9]") |> unlist(), filename = NULL)
list.files("input/drawing/")
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_extract(filename, "\\b+$"), filename = NULL)
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_extract(filename, "\\b\\w+$"), filename = NULL)
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_extract(filename, "\\d"), filename = NULL)
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)"),
t = str_extract(filename, "\\d{3}"),
filename = NULL)
all_umap_df
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)"),
t = str_extract(filename, "\\d{3}"))
all_umap_df
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)"),
t = str_extract(filename, "\\d{3}"))
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)"),
t = str_extract(filename, "\\d{3}")) |> View()
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)")[2],
t = str_extract(filename, "\\d{3}")) |> View()
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)")[1],
t = str_extract(filename, "\\d{3}")) |> View()
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)")[,2],
t = str_extract(filename, "\\d{3}")) |> View()
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)")[,2],
t = str_extract(filename, "\\d{3}") |> as.numeric()) |> View()
all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)")[,2] |> as.numeric(),
t = str_extract(filename, "\\d{3}") |> as.numeric()) |> View()
all_umap_df2 <- all_umap_df |>
mutate(filename = list.files("input/drawing/")) |>
mutate(experiment = str_match(filename, "2-(\\d)")[,2] |> as.numeric(),
t = str_extract(filename, "\\d{3}") |> as.numeric())
all_umap_df2 |>
ggplot(aes(x = x, y = y, colour = experiment)) +
geom_point(size = .3)
all_umap_df2 |>
ggplot(aes(x = x, y = y, colour = experiment)) +
geom_point(size = .3) +
geom_path(aes(colour = t)) +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
facet_wrap(facets = vars(exp), nrow = 2, scales = "free") +
theme(
panel.grid = element_blank(),
axis.line = element_line())
all_umap_df2 |>
ggplot(aes(x = x, y = y, colour = experiment)) +
geom_point(size = .3) +
geom_path(aes(colour = t)) +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
all_umap_df2 |>
ggplot(aes(x = x, y = y, colour = experiment)) +
geom_point(size = .3) +
geom_path(aes(colour = t, group = experiment)) +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
all_umap_df2 |>
ggplot(aes(x = x, y = y, colour = experiment)) +
geom_point(size = .3) +
# geom_path(aes(colour = t, group = experiment)) +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
all_umap_df2 |>
ggplot(aes(x = x, y = y, colour = experiment |> as.factor())) +
geom_point(size = .3) +
# geom_path(aes(colour = t, group = experiment)) +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
all_umap_df2 |>
ggplot(aes(x = x, y = y, colour = experiment |> as.factor())) +
geom_point(size = .3) +
# geom_path(aes(colour = t, group = experiment)) +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_d() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
all_umap_df2 |>
ggplot(aes(x = x, y = y, colour = experiment |> as.factor())) +
geom_point(size = .3) +
# geom_path(aes(colour = t, group = experiment)) +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
# scale_colour_viridis_d() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
|> mutate(across(everything(), as.numeric)) |>
mnist_df <- mnist |>
as_tibble() |>
mutate(across(everything(), as.numeric)) |>
select(-Label)
mnist_umap <- umap(mnist_df, pca = 10)
mnist_umap_df <-
mnist_umap$layout |>
as_tibble() |>
transmute(x = V1, y = V2) |>
mutate(label = mnist$Label)
mnist_umap_df |>
ggplot(aes(x = x, y = y, colour = label)) +
geom_point(alpha = .5, size = .001) +
theme_minimal()
ggsave("./output/mnist_umap.png", height = 1000, width = 1500, unit = "px")
library(parallel)
detectCores()
mnist_df <- mnist |>
as_tibble() |>
mutate(across(everything(), as.numeric)) |>
select(-Label) # ラベル列を落とす
mnist_umap <- mnist_df |>
umap(
pca = 10,
verbose = TRUE,
n_threads = 6
)
mnist_umap <- mnist_df |>
umap(
pca = 10,
verbose = TRUE,
n_threads = 5
)
library(umap)
library(tidyverse)
library(snedata)
library(imager)
library(purrr)
library(Rtsne)
library(irlba) # for sparse PCA, not needed?
gctorture(FALSE)
library(umap)
library(tidyverse)
library(snedata)
library(imager)
library(purrr)
library(Rtsne)
library(irlba) # for sparse PCA, not needed?
mnist_umap <- mnist_df |>
umap(
pca = 10,
verbose = TRUE,
n_threads = 5
)
image_umap <- df_image |>
umap(verbose = TRUE, n_threads = 6)
image_umap_df <- image_umap$layout |>
as_tibble() |>
transmute(x = V1, y = V2) |>
mutate(t = 0:41)
image_umap_df |>
ggplot(aes(x = x, y = y, colour = t)) +
geom_point(size = .3) +
geom_path() +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
ggsave("./output/image_umap.png", height = 1000, width = 1500, unit = "px")
image_tsne <- df_image |> select(-t) |>
as.matrix() |>
Rtsne(
perplexity = 12, # default 30, max datasize/3
exaggeration_factor = 15,  # default 12
n_threads = 4,
verbose = TRUE,
max_iter = 3000
)
image_tsne <- df_image |>
as.matrix() |>
Rtsne(
perplexity = 12, # default 30, max datasize/3
exaggeration_factor = 15,  # default 12
n_threads = 4,
verbose = TRUE,
max_iter = 3000
)
image_tsne <- df_image |>
as.matrix() |>
Rtsne(
perplexity = 12, # default 30, max datasize/3
n_threads = 4,
verbose = TRUE
)
image_tsne_df <- image_tsne$Y |>
as_tibble() |>
rename(x = "V1", y = "V2") |>
mutate(t = 0:38)
image_tsne_df <- image_tsne$Y |>
as_tibble() |>
rename(x = "V1", y = "V2") |>
mutate(t = 0:41)
image_tsne_df |>
ggplot(aes(x = x, y = y, colour = t)) +
geom_point(size = .3) +
geom_path() +
geom_text(aes(label = t), hjust = 0, nudge_x = .1, size = 2) +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
ggsave("./output/image_tsne.png", height = 1000, width = 1500, unit = "px")
nested_df_grid_conditions <-
expand_grid(min_dist = c(2^(-4:-1)), n_neighbors = 2^(1:4)) |>
mutate(
umap = map2(
min_dist,
n_neighbors,
~ umap(
df_image,
spread = 2,
n_threads = 4,
min_dist = .x,
n_neighbors = .y
)
)
)
# unnest
# unnesting a column of matrices doesn't unnest well
# cf. https://community.rstudio.com/t/understanding-unnest-and-its-expectations/428 alistaire
# but this method does not work either.
# instead we use deframe but it cannot be performed in one long pipe
df_unnested_matrix_column <-
nested_df_grid_conditions |>
rowwise() |>
mutate(umap_df = umap |> extract2(1) |> list()) |>
mutate(umap = NULL) |>
ungroup() |>
unnest_longer(umap_df, indices_to = "t")
df_matrix_only <-
df_unnested_matrix_column |>
select(umap_df) |>
deframe() |>
as_tibble()
df_grid_conditions <-
bind_cols(
df_unnested_matrix_column,
df_matrix_only
) |>
select(-umap_df) |>
rename(x = "V1", y = "V2")
df_grid_conditions |>
ggplot(aes(x = x, y = y, colour = t)) +
geom_point(size = .3) +
geom_path(size = .1) +
scale_colour_viridis_c() +
facet_grid(rows = vars(min_dist), cols = vars(n_neighbors)) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
ggsave("./output/image_umap_grid_conditions.png", height = 1000, width = 1500, unit = "px")
# unnest
# unnesting a column of matrices doesn't unnest well
# cf. https://community.rstudio.com/t/understanding-unnest-and-its-expectations/428 alistaire
# but this method does not work either.
# instead we use deframe but it cannot be performed in one long pipe
df_unnested_matrix_column <-
nested_df_grid_conditions |>
rowwise() |>
mutate(umap_df = umap |> extract2(1) |> list(),
umap = NULL) |>
ungroup() |>
unnest_longer(umap_df, indices_to = "t")
df_matrix_only <-
df_unnested_matrix_column |>
select(umap_df) |>
deframe() |>
as_tibble()
df_grid_conditions <-
bind_cols(
df_unnested_matrix_column,
df_matrix_only
) |>
select(-umap_df) |>
rename(x = "V1", y = "V2")
df_grid_conditions |> colnames()
df_grid_conditions |>
ggplot(aes(x = x, y = y, colour = t)) +
geom_point(size = .3) +
geom_path(size = .1) +
scale_colour_viridis_c() +
facet_grid(rows = vars(min_dist), cols = vars(n_neighbors)) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
nested_df_grid_conditions <-
expand_grid(min_dist = c(2^(-4:-1)), n_neighbors = 2^(2:5)) |>
mutate(
umap = map2(
min_dist,
n_neighbors,
~ umap(
df_image,
spread = 2,
n_threads = 4,
min_dist = .x,
n_neighbors = .y
)
)
)
nested_df_grid_conditions <-
expand_grid(min_dist = c(2^c(-7, -5, -3, -1)), n_neighbors = c(5, 20, 80, 320)) |>
mutate(
umap = map2(
min_dist,
n_neighbors,
~ umap(
df_image,
spread = 2,
n_threads = 4,
min_dist = .x,
n_neighbors = .y
)
)
)
nested_df_grid_conditions <-
expand_grid(min_dist = c(2^c(-7, -5, -3, -1)), n_neighbors = c(4, 8, 16, 32)) |>
mutate(
umap = map2(
min_dist,
n_neighbors,
~ umap(
df_image,
spread = 2,
n_threads = 4,
min_dist = .x,
n_neighbors = .y
)
)
)
# unnest
# unnesting a column of matrices doesn't unnest well
# cf. https://community.rstudio.com/t/understanding-unnest-and-its-expectations/428 alistaire
# but this method does not work either.
# instead we use deframe but it cannot be performed in one long pipe
df_unnested_matrix_column <-
nested_df_grid_conditions |>
rowwise() |>
mutate(umap_df = umap |> extract2(1) |> list(),
umap = NULL) |>
ungroup() |>
unnest_longer(umap_df, indices_to = "t")
df_matrix_only <-
df_unnested_matrix_column |>
select(umap_df) |>
deframe() |>
as_tibble()
df_grid_conditions <-
bind_cols(
df_unnested_matrix_column,
df_matrix_only
) |>
select(-umap_df) |>
rename(x = "V1", y = "V2")
df_grid_conditions |> colnames()
df_grid_conditions |>
ggplot(aes(x = x, y = y, colour = t)) +
geom_point(size = .3) +
geom_path(size = .1) +
scale_colour_viridis_c() +
facet_grid(rows = vars(min_dist), cols = vars(n_neighbors)) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line())
ggsave("./output/image_umap_grid_conditions.png", height = 1000, width = 1500, unit = "px")
df_unnested_matrix_column
nested_df_grid_conditions <-
expand_grid(
min_dist = c(2^c(-7, -5, -3, -1)),
n_neighbors = c(4, 8, 16, 32)
) |>
mutate(
umap = map2(
min_dist,
n_neighbors,
~ umap(
df_image,
spread = 2,
n_threads = 4,
min_dist = .x,
n_neighbors = .y
)
)
)
nested_df_grid_conditions
df_unnested_matrix_column
repl_df <- tibble(
a = c(1, 2, 3),
b = list(
matrix(data = c(1,2,3,4), nrow = 2, ncol = 2),
matrix(data = c(1,2,3,4), nrow = 2, ncol = 2),
matrix(data = c(1,2,3,4), nrow = 2, ncol = 2)
)
)
repl_df
repl_df2 <- repl_df |>
unnest(b) # 非常に近いがよくみると3列にならない…？
repl_df2
repl_df3 <- repl_df |>
rowwise() |>
mutate(
df = b |> extract2(1) |> as_tibble(),
b = NULL
)
repl_df3
tibble(a = c(1, 1, 2, 2,  3, 3), V1 = c(1,2,1,2,1,2), V2 = c(3,4,3,4,3,4))
repl_df %>%
unnest(b) %>%
deframe() %>%
as_tibble(rownames = "a")
df_matrix_only
df_grid_conditions
